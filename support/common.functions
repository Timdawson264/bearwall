# Common functions used in firewall rules. You must source this from a script
# that has already setup IPTABLES!

function polite_target() {
	local RULE
	RULE=$1
	if [ ! -z "$if" ]; then
		RULE=${if}-${RULE}
	fi
	shift
	TARGET=$1
	shift
    case $conf_logging in
        nflog )
            $IPTABLES --append $RULE \
                --match limit --limit 2/s \
                --jump NFLOG --nflog-prefix "FW/${RULE}: "
                $*
        ;;
        none )
        ;;
        syslog|* )
            $IPTABLES --append $RULE \
                --match limit --limit 2/s \
                --jump LOG --log-prefix "FW/${RULE}: " \
                --log-level debug \
                $*
        ;;
    esac
	if [ "$TARGET" != "DROP" ]; then
		$IPTABLES --append $RULE \
			--match limit --limit 5/s \
			--jump $TARGET \
			$*
	fi
	$IPTABLES --append $RULE \
		--jump DROP \
		$*
}

function polite_reject() {
	local RULE
	RULE=$1
	shift
	polite_target $RULE REJECT $*
}

# Deny is an ipchains ism, DROP is the new target.
# Keep this around because of the number of things that may use it.
function polite_deny() {
	local RULE
	RULE=$1
	shift
	polite_target $RULE DROP $*
}

function polite_drop() {
	local RULE
	RULE=$1
	shift
	polite_target $RULE DROP $*
}

function status() {
	echo "*** $*"
}

function substatus() {
	echo " *  $*"
}

function subsubstatus() {
	echo "    $*"
}

